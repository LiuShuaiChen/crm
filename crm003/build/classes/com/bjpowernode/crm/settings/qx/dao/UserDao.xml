<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.bjpowernode.crm.settings.qx.dao.UserDao">
	<resultMap type="user" id="rUser">
		<id property="id" column="id" />
		<result property="loginAct" column="loginAct"/>
		<result property="loginPwd" column="loginPwd"/>
		<result property="name" column="name"/>
		<result property="email" column="email"/>
		<result property="lockStatus" column="lockStatus"/>
		<result property="expireTime" column="expireTime"/>
		<result property="allowIps" column="allowIps"/>
		<result property="deptName" column="deptName"/>
		<result property="createBy" column="createBy"/>
		<result property="createTime" column="createTime"/>
		<result property="updateBy" column="updateBy"/>
		<result property="updateTime" column="updateTime"/>

	</resultMap>
	
	
	<!-- void insert(User user); -->
	<insert id="insert" parameterType="user">
		insert into tbl_user(id,loginAct,loginPwd,name,email,lockStatus,allowIps,expireTime,deptName,createBy,createTime)                                             
			values(#{id},#{loginAct},#{loginPwd},#{name},#{email},#{lockStatus},#{allowIps},#{expireTime},#{deptName},#{createBy},#{createTime})
	</insert>
	
	
	<!-- void delete(String id); -->
	<delete id="delete" parameterType="string">
		delete from tbl_user where id=#{id}
	</delete>
	
	<!-- void update(User user); -->
	<update id="update" parameterType="user">
		update tbl_user set loginAct=#{loginAct}, loginPwd=#{loginPwd},name=#{name},email=#{email},lockStatus=#{lockStatus}, allowIps=#{allowIps}, expireTime=#{expireTime},deptName=#{deptName},updateBy=#{updateBy},updateTime=#{updateTime}
		where id=#{id}
	</update>
	
	<!-- User getById(String Id); -->
	<select id="getById" parameterType="string" resultType="user">
		select id, loginAct,loginPwd, name, email, lockStatus, expireTime, allowIps, deptName, createBy, createTime, updateBy,updateTime
		from tbl_user where id=#{id}
	</select>
	
	<!-- List<User> getByAll(); -->
	<select id="getByAll" resultMap="rUser">
		select id, loginAct,loginPwd, name, email, lockStatus, expireTime, allowIps, deptName, createBy, createTime, updateBy,updateTime
		from tbl_user
	</select>
	
	<!-- List<User> getByLimit(Map<String, Object>map); -->
	<select id="getByLimit" parameterType="map" resultMap="rUser">
		select id, loginAct,loginPwd, name, email, lockStatus, expireTime, allowIps, deptName, createBy, createTime, updateBy,updateTime
		from tbl_user
		<where>
			<if test="map1.name != null and map1.name != ''">
				and name like #{map1.name}
			</if>
			
			<if test="map1.deptName != null and map1.deptName != ''">
				and deptName like #{map1.deptName}
			</if>
			
			<if test="map.lockStatus != null and map1.lockStatus != ''">
				and lockStatus like #{map1.lockStatus}
			</if>
			
			<if test="map1.startTime != null and map1.lockStatus != ''">
				and expireTime &gt; #{map1.startTime}
			</if>
			
			<if test="map1.endTime != null and map1.endTime != ''">
				and expireTime &lt; #{map1.endTime}
			</if>
		</where>
		limit #{map2.skipCount},#{map2.pageCount}		
	</select>
	
	
	<!-- int getToal(Map<String, String>map); -->
		<!-- 
		Map<String,String> map1 = new HashMap<String,String>();
		map1.put("name","%"+name+"%");
		map1.put("deptName","%"+deptName+"%");
		map1.put("lockStatus",lockStatus);
		map1.put("startTime",startTime);
		map1.put("endTime",endTime);
		-->
	<select id="getToal" parameterType="map" resultType="int">
		select id, loginAct,loginPwd, name, email, lockStatus, expireTime, allowIps, deptName, createBy, createTime, updateBy,updateTime
		from tbl_user
		
		<where>
			<if test="name!=null and name!=''">
				and name like #{name}
			</if>
			<if test="deptName != null and deptName!=''">
				and deptName like #{deptName}
			</if>
			
			<if test="lockStatus != null and lockStatus != ''">
				and lockStatus like #{lockStatus}
			</if>
			
			<if test="startTime != null and starTime != ''">
				and expireTime &gt; #{startTime}
			</if>
			
			<if test="endTime != null and endTime !=''">
				and expireTime &lt; #{endTime}
			</if>
		
		</where>
	</select>
	
	


</mapper>